[{"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\store.ts":"1","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\Task.tsx":"2","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\reducers\\todolists-reducer.ts":"3","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\App.tsx":"4","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\Todolist.tsx":"5","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\AddItemForm.tsx":"6","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\AddItemForm.stories.tsx":"7","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\Task.stories.tsx":"8","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\EditableSpan.tsx":"9","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\EditableSpan.stories.tsx":"10","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\App.stories.tsx":"11","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\ReduxStoreProviderDecorator.tsx":"12","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\reducers\\tasks-reducer.ts":"13"},{"size":423,"mtime":1634640115623,"results":"14","hashOfConfig":"15"},{"size":1532,"mtime":1634642204226,"results":"16","hashOfConfig":"15"},{"size":2386,"mtime":1634640115643,"results":"17","hashOfConfig":"15"},{"size":4648,"mtime":1634640115553,"results":"18","hashOfConfig":"15"},{"size":3461,"mtime":1634639450718,"results":"19","hashOfConfig":"20"},{"size":1442,"mtime":1634650667446,"results":"21","hashOfConfig":"20"},{"size":535,"mtime":1634641635672,"results":"22","hashOfConfig":"15"},{"size":876,"mtime":1634644072711,"results":"23","hashOfConfig":"20"},{"size":950,"mtime":1634643352615,"results":"24","hashOfConfig":"15"},{"size":674,"mtime":1634647841602,"results":"25","hashOfConfig":"20"},{"size":442,"mtime":1634645120734,"results":"26","hashOfConfig":"15"},{"size":1204,"mtime":1634647754795,"results":"27","hashOfConfig":"15"},{"size":3441,"mtime":1634640115545,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"sy9b82",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hvnia5",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\store.ts",[],["59","60"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\Task.tsx",["61"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskType} from './Todolist'\r\n\r\nexport type TaskPropsType = {\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    task: TaskType\r\n    todolistId: string\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = () => props.removeTask(props.task.id, props.todolistId)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.changeTaskTitle, props.todolistId])\r\n\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\reducers\\todolists-reducer.ts",["62"],"import {FilterValuesType, TodolistType} from '../../App'\r\nimport {v1} from 'uuid'\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all'\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id)\r\n            if (todolist) {\r\n                todolist.title = action.title\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id)\r\n            if (todolist) {\r\n                todolist.filter = action.filter\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return {type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return {type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return {type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return {type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\App.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\Todolist.tsx",["63","64","65","66","67"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\AddItemForm.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\AddItemForm.stories.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\Task.stories.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\EditableSpan.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\EditableSpan.stories.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\App.stories.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\stories\\ReduxStoreProviderDecorator.tsx",["68","69"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\state\\reducers\\tasks-reducer.ts",["70"],"import {TasksStateType} from '../../App'\r\nimport {TaskType} from '../../components/Todolist'\r\nimport {v1} from 'uuid'\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer'\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {\r\n    count: []\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId]\r\n            stateCopy[action.todolistId] = tasks.filter(t => t.id != action.taskId)\r\n            return stateCopy\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId]\r\n            stateCopy[action.todolistId] = [newTask, ...tasks]\r\n            return stateCopy\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId]\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, isDone: action.isDone}\r\n                    : t)\r\n            return ({...state})\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId]\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, title: action.title}\r\n                    : t)\r\n            return ({...state})\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":22,"column":8,"nodeType":"77","endLine":22,"endColumn":64,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":33,"column":45,"nodeType":"81","messageId":"82","endLine":33,"endColumn":47},{"ruleId":"75","severity":1,"message":"76","line":34,"column":8,"nodeType":"77","endLine":34,"endColumn":33,"suggestions":"83"},{"ruleId":"75","severity":1,"message":"76","line":41,"column":8,"nodeType":"77","endLine":41,"endColumn":45,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"76","line":43,"column":86,"nodeType":"77","endLine":43,"endColumn":116,"suggestions":"85"},{"ruleId":"75","severity":1,"message":"76","line":44,"column":92,"nodeType":"77","endLine":44,"endColumn":122,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"76","line":45,"column":98,"nodeType":"77","endLine":45,"endColumn":128,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":20,"column":9,"nodeType":"90","messageId":"91","endLine":23,"endColumn":10,"fix":"92"},{"ruleId":"88","severity":1,"message":"93","line":24,"column":9,"nodeType":"90","messageId":"91","endLine":27,"endColumn":10,"fix":"94"},{"ruleId":"79","severity":1,"message":"80","line":47,"column":67,"nodeType":"81","messageId":"82","endLine":47,"endColumn":69},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["97"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["98"],["99"],["100"],["101"],["102"],"no-useless-computed-key","Unnecessarily computed property ['todolistId1'] found.","Property","unnecessarilyComputedProperty",{"range":"103","text":"104"},"Unnecessarily computed property ['todolistId2'] found.",{"range":"105","text":"106"},"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},{"desc":"107","fix":"110"},{"desc":"107","fix":"111"},{"desc":"107","fix":"112"},{"desc":"107","fix":"113"},[642,657],"'todolistId1'",[791,806],"'todolistId2'","Update the dependencies array to be: [props]",{"range":"114","text":"115"},{"range":"116","text":"115"},{"range":"117","text":"115"},{"range":"118","text":"115"},{"range":"119","text":"115"},{"range":"120","text":"115"},[1050,1106],"[props]",[1178,1203],[1416,1453],[1543,1573],[1667,1697],[1797,1827]]