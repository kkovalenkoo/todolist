[{"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts":"1","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\store.ts":"2","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"3","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"4","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\reportWebVitals.ts":"5","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\ErrorSnackbar.tsx":"6","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"7","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\utils\\error-utils.ts":"8","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\index.tsx":"9","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\App.tsx":"10","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\AddItemForm.tsx":"11","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\EditableSpan.tsx":"12","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\Login\\Login.tsx":"13","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\app-reducer.ts":"14","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\api\\api.ts":"15","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\Login\\auth-reducer.ts":"16","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx":"17"},{"size":3688,"mtime":1637141147447,"results":"18","hashOfConfig":"19"},{"size":695,"mtime":1637140789053,"results":"20","hashOfConfig":"19"},{"size":1772,"mtime":1637057033117,"results":"21","hashOfConfig":"19"},{"size":4138,"mtime":1637057033025,"results":"22","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"23","hashOfConfig":"19"},{"size":1039,"mtime":1636726636914,"results":"24","hashOfConfig":"19"},{"size":5132,"mtime":1637057272684,"results":"25","hashOfConfig":"19"},{"size":608,"mtime":1636739009648,"results":"26","hashOfConfig":"19"},{"size":299,"mtime":1637049804838,"results":"27","hashOfConfig":"19"},{"size":2495,"mtime":1637174427030,"results":"28","hashOfConfig":"19"},{"size":1573,"mtime":1636723855016,"results":"29","hashOfConfig":"19"},{"size":959,"mtime":1635699969727,"results":"30","hashOfConfig":"19"},{"size":2552,"mtime":1637161655559,"results":"31","hashOfConfig":"19"},{"size":1625,"mtime":1637172329968,"results":"32","hashOfConfig":"19"},{"size":2892,"mtime":1637173993588,"results":"33","hashOfConfig":"19"},{"size":1335,"mtime":1637172251401,"results":"34","hashOfConfig":"19"},{"size":4152,"mtime":1637173002643,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1v6rwdu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts",[],["75","76"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\store.ts",[],["77","78"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["79","80","81"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["82","83","84","85","86","87"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\reportWebVitals.ts",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\ErrorSnackbar.tsx",[],["88","89"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",["90"],"import {taskAPI, TaskPriorities, TaskStatuses, TaskType, todolistAPI, UpdateTaskModelType} from '../../api/api'\r\nimport {addTodolistAC, removeTodolistAC, setTodolistsAC} from './todolists-reducer'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, setAppStatusAC} from '../../app/app-reducer'\r\nimport {handleNetworkError, handleServerError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id !== action.taskId)}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.domainModel} : t)\r\n            }\r\n        case 'SET-TASK':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST': {\r\n            const stateCopy = {...state}\r\n            delete stateCopy[action.id]\r\n            return stateCopy\r\n        }\r\n        case 'SET-TODOLISTS': {\r\n            const stateCopy = {...state}\r\n            action.todolists.forEach(tl => {\r\n                stateCopy[tl.id] = []\r\n            })\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const removeTaskAC = (todolistId: string, taskId: string) => ({\r\n    type: 'REMOVE-TASK', todolistId, taskId\r\n} as const)\r\nexport const addTaskAC = (task: TaskType) => ({\r\n    type: 'ADD-TASK', task\r\n} as const)\r\nexport const updateTaskAC = (todolistId: string, taskId: string, domainModel: UpdateDomainTaskType) => ({\r\n    type: 'UPDATE-TASK', todolistId, taskId, domainModel\r\n} as const)\r\nexport const setTasksAC = (tasks: TaskType[], todolistId: string) => ({\r\n    type: 'SET-TASK', tasks, todolistId\r\n} as const)\r\n\r\n//Thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    taskAPI.getTasks(todolistId)\r\n        .then(res => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setTasksAC(res.data.items, todolistId))\r\n        })\r\n}\r\nexport const addTaskTC = (todolistId: string, taskTitle: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    taskAPI.createTask(todolistId, taskTitle)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setAppStatusAC('succeeded'))\r\n                dispatch(addTaskAC(res.data.data.item))\r\n            } else {\r\n                handleServerError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            handleNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const removeTaskTC = (todolistId: string, taskId: string) => (dispatch: Dispatch) => {\r\n    return taskAPI.deleteTask(todolistId, taskId)\r\n        .then(() => dispatch(removeTaskAC(todolistId, taskId)))\r\n}\r\nexport const updateTaskTC = (todolistId: string, taskId: string, domainModel: UpdateDomainTaskType) =>\r\n    (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (task) {\r\n            const apiModel: UpdateTaskModelType = {\r\n                status: task.status,\r\n                title: task.title,\r\n                description: task.description,\r\n                priority: task.priority,\r\n                startDate: task.startDate,\r\n                deadline: task.deadline,\r\n                ...domainModel\r\n            }\r\n            taskAPI.updateTask(todolistId, taskId, apiModel)\r\n                .then((res) => {\r\n                    if (res.data.resultCode === 0) dispatch(updateTaskAC(todolistId, taskId, domainModel))\r\n                    else {\r\n                        handleServerError(res.data, dispatch)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    handleNetworkError(error, dispatch)\r\n                })\r\n        }\r\n    }\r\n\r\n//Types\r\nexport type UpdateDomainTaskType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = { [key: string]: TaskType[] }\r\ntype ActionsType =\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof setTasksAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | ReturnType<typeof addTodolistAC>\r\n    | ReturnType<typeof removeTodolistAC>\r\n    | ReturnType<typeof setTodolistsAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n\r\n\r\n\r\n","E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\utils\\error-utils.ts",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\index.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\App.tsx",["91"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\AddItemForm.tsx",[],["92","93"],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\components\\EditableSpan.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\Login\\Login.tsx",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\app\\app-reducer.ts",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\api\\api.ts",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\Login\\auth-reducer.ts",[],"E:\\Yura\\it-incubator\\IT-INCUBATOR\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":17,"column":9,"nodeType":"103","endLine":17,"endColumn":42,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":22,"column":8,"nodeType":"103","endLine":22,"endColumn":41,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":26,"column":8,"nodeType":"103","endLine":26,"endColumn":41,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":20,"column":8,"nodeType":"103","endLine":20,"endColumn":37,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"102","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":42,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"102","line":32,"column":8,"nodeType":"103","endLine":32,"endColumn":54,"suggestions":"110"},{"ruleId":"101","severity":1,"message":"102","line":34,"column":95,"nodeType":"103","endLine":34,"endColumn":134,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"102","line":35,"column":101,"nodeType":"103","endLine":35,"endColumn":140,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"102","line":36,"column":107,"nodeType":"103","endLine":36,"endColumn":146,"suggestions":"113"},{"ruleId":"95","replacedBy":"114"},{"ruleId":"97","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":58,"nodeType":"118","messageId":"119","endLine":1,"endColumn":69},{"ruleId":"101","severity":1,"message":"120","line":23,"column":8,"nodeType":"103","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"95","replacedBy":"122"},{"ruleId":"97","replacedBy":"123"},{"ruleId":"101","severity":1,"message":"124","line":30,"column":8,"nodeType":"103","endLine":30,"endColumn":18,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["128"],["129"],["130"],"React Hook useEffect has a missing dependency: 'demo'. Either include it or remove the dependency array.",["131"],["132"],["133"],["134"],["135"],["136"],["126"],["127"],"@typescript-eslint/no-unused-vars","'todolistAPI' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["137"],["126"],["127"],"React Hook useEffect has missing dependencies: 'demo' and 'isLoggedIn'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},{"desc":"139","fix":"142"},{"desc":"143","fix":"144"},{"desc":"139","fix":"145"},{"desc":"139","fix":"146"},{"desc":"139","fix":"147"},{"desc":"139","fix":"148"},{"desc":"139","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [props]",{"range":"154","text":"155"},{"range":"156","text":"155"},{"range":"157","text":"155"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"158","text":"159"},{"range":"160","text":"155"},{"range":"161","text":"155"},{"range":"162","text":"155"},{"range":"163","text":"155"},{"range":"164","text":"155"},"Update the dependencies array to be: [dispatch]",{"range":"165","text":"166"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"167","text":"168"},[764,797],"[props]",[1070,1103],[1260,1293],[800,829],"[demo, dispatch, props.todolist.id]",[946,980],[1211,1257],[1356,1395],[1498,1537],[1646,1685],[1153,1155],"[dispatch]",[1212,1222],"[demo, dispatch, isLoggedIn]"]